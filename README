
1) Goals
--------

This is an discrete time event-driven network simulator. Yet another one. Our 
feature goals are:
   - provide a UDP/TCP IPv4 stack with multicast support.
   - provide a nice network interface API to plug in various types of
     network interfaces.
   - provide at least a CSMA-CD (ethernet) network interface and a 802.11
     network interface.
   - provide a nice Packet API which can be used to support:
       - libpcap-style packet dumps
       - injection and sniffing of real packets in and out of the simulator
         to and from a real network
   - provide an application-level API similar to normal POSIX environments
     to allow the porting of various classic socket-based applications.
     For example, apache and various routing daemons.

So far, this code could be labeled as a prototype since it does not implement
all the features described above. We are also open to outside contributions
which would be interested on working on some of these features or other
network simulation modules.

2) Current Implementation
-------------------------

The current implementation features:
   - a UDP/IPv4 stack without multicast
   - a nice packet API
   - a complete arp module
   - an empty ethernet module which uses the arp module to perform address
     translation between IPv4 addresses and MAC addresses.
   - libpcap dump support at the network interface level
   - a sample application with a simple udp source and sink pair.
   - the framework to provide a POSIX environment (this is far from the
     real thing for now).

3) Roadmap
----------

The next features which require work are:
   - ipv4 routing
   - ipv4 fragmentation/defragmentation
   - tcp support
   - csma/cd support
   - port of our ns-2 802.11 code


4) Known bugs
-------------

ipv4 checksum calculation is wrong.
   
5) Contributing
---------------

If you are interested in:
  - using this simulator
  - reporting a bug
  - contributing a new module

Please, consult our website:
http://spoutnik.inria.fr/yans

