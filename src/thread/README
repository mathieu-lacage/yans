This is a small very simple fiber library. The name fiber
comes from the windows NT facility named fiber. It is a
sort of user-space thread. That is, it is a piece of
code which runs on its own stack but which is not managed
by the OS kernel. Speficically, this means that:
  - the OS kernel does not schedule these fibers. i.e.,
    you have to perform the fiber scheduling by hand.
  - you can do pretty much all the things you usually
    do with real threads. That is, synchronization
    primitives, blocking IO, etc.

For now, synchronization primitives are not implemented.
Blocking IO is part of the network simulation model so
it does not belong to this directory.

Porting this code to anything but a unix ia-32 system
is a bit tricky. You need to implement two classes:
  1 -- FiberStack defined in fiber-stack.h and
  2 -- FiberContext defined in fiber-context.h

The unix ia-32 implementation of these two classes is 
located in fiber-stack-ia32.cc and fiber-context-posix.cc.
fiber-stack-ia32 does not work with gcc's -fomit-frame-pointer

 1 -- The FiberStack API should be reasonably easy to 
   implement with a bit of well-choosen assembly code. 

 2 -- FiberContext relies on the existance of setjmp/longjmp
   functions which are mandated by the C standard. However,
   I have heard rumors that they do not work with C++ code
   on win32 systems. For more information, see:
   http://msdn.microsoft.com/library/default.asp?url=
   /library/en-us/vclang/html/_core_using_setjmp.2f.longjmp.asp
   
